Grammar:

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations BEGIN commands END
Rule 2     declarations -> <empty>
Rule 3     declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
Rule 4     declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
Rule 5     declarations -> declarations COMMA PIDENTIFIER
Rule 6     declarations -> declarations PIDENTIFIER
Rule 7     commands -> command
Rule 8     commands -> commands command
Rule 9     command -> READ identifier SEMICOLON
Rule 10    command -> WRITE value SEMICOLON
Rule 11    command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
Rule 12    command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
Rule 13    command -> DO commands WHILE condition ENDDO
Rule 14    command -> WHILE condition DO commands ENDWHILE
Rule 15    command -> IF condition THEN commands ENDIF
Rule 16    command -> IF condition THEN commands ELSE commands ENDIF
Rule 17    command -> identifier ASSIGN expression SEMICOLON
Rule 18    expression -> value MODULO value  [precedence=left, level=2]
Rule 19    expression -> value DIVIDE value  [precedence=left, level=2]
Rule 20    expression -> value MULTIPLY value  [precedence=left, level=2]
Rule 21    expression -> value MINUS value  [precedence=left, level=1]
Rule 22    expression -> value PLUS value  [precedence=left, level=1]
Rule 23    expression -> value
Rule 24    condition -> value NOT_EQUAL value
Rule 25    condition -> value EQUAL value
Rule 26    condition -> value LESS_OR_EQUAL value
Rule 27    condition -> value GREATER_OR_EQUAL value
Rule 28    condition -> value LESS_THAN value
Rule 29    condition -> value GREATER_THAN value
Rule 30    value -> NUMBER
Rule 31    value -> identifier
Rule 32    identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
Rule 33    identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
Rule 34    identifier -> PIDENTIFIER

Terminals, with rules where they appear:

ASSIGN               : 17
BEGIN                : 1
COLON                : 3 4
COMMA                : 3 5
DECLARE              : 1
DIVIDE               : 19
DO                   : 11 12 13 14
DOWNTO               : 11
ELSE                 : 16
END                  : 1
ENDDO                : 13
ENDFOR               : 11 12
ENDIF                : 15 16
ENDWHILE             : 14
EQUAL                : 25
FOR                  : 11 12
FROM                 : 11 12
GREATER_OR_EQUAL     : 27
GREATER_THAN         : 29
IF                   : 15 16
LESS_OR_EQUAL        : 26
LESS_THAN            : 28
LPARENTHESIS         : 3 4 32 33
MINUS                : 21
MODULO               : 18
MULTIPLY             : 20
NOT_EQUAL            : 24
NUMBER               : 3 3 4 4 30 32
PIDENTIFIER          : 3 4 5 6 11 12 32 33 33 34
PLUS                 : 22
READ                 : 9
RPARENTHESIS         : 3 4 32 33
SEMICOLON            : 9 10 17
THEN                 : 15 16
TO                   : 12
WHILE                : 13 14
WRITE                : 10
error                : 

Nonterminals, with rules where they appear:

command              : 7 8
commands             : 1 8 11 12 13 14 15 16 16
condition            : 13 14 15 16
declarations         : 1 3 4 5 6
expression           : 17
identifier           : 9 17 31
program              : 0
value                : 10 11 11 12 12 18 18 19 19 20 20 21 21 22 22 23 24 24 25 25 26 26 27 27 28 28 29 29


state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations BEGIN commands END
    DECLARE         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .


state 2

    (1) program -> DECLARE . declarations BEGIN commands END
    (2) declarations -> .
    (3) declarations -> . declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (4) declarations -> . declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (5) declarations -> . declarations COMMA PIDENTIFIER
    (6) declarations -> . declarations PIDENTIFIER
    BEGIN           reduce using rule 2 (declarations -> .)
    COMMA           reduce using rule 2 (declarations -> .)
    PIDENTIFIER     reduce using rule 2 (declarations -> .)

    declarations                   shift and go to state 3

state 3

    (1) program -> DECLARE declarations . BEGIN commands END
    (3) declarations -> declarations . COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (4) declarations -> declarations . PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (5) declarations -> declarations . COMMA PIDENTIFIER
    (6) declarations -> declarations . PIDENTIFIER
    BEGIN           shift and go to state 4
    COMMA           shift and go to state 5
    PIDENTIFIER     shift and go to state 6


state 4

    (1) program -> DECLARE declarations BEGIN . commands END
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 7
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 5

    (3) declarations -> declarations COMMA . PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (5) declarations -> declarations COMMA . PIDENTIFIER
    PIDENTIFIER     shift and go to state 17


state 6

    (4) declarations -> declarations PIDENTIFIER . LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (6) declarations -> declarations PIDENTIFIER .
    LPARENTHESIS    shift and go to state 18
    BEGIN           reduce using rule 6 (declarations -> declarations PIDENTIFIER .)
    COMMA           reduce using rule 6 (declarations -> declarations PIDENTIFIER .)
    PIDENTIFIER     reduce using rule 6 (declarations -> declarations PIDENTIFIER .)


state 7

    (1) program -> DECLARE declarations BEGIN commands . END
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    END             shift and go to state 19
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 8

    (7) commands -> command .
    END             reduce using rule 7 (commands -> command .)
    READ            reduce using rule 7 (commands -> command .)
    WRITE           reduce using rule 7 (commands -> command .)
    FOR             reduce using rule 7 (commands -> command .)
    DO              reduce using rule 7 (commands -> command .)
    WHILE           reduce using rule 7 (commands -> command .)
    IF              reduce using rule 7 (commands -> command .)
    PIDENTIFIER     reduce using rule 7 (commands -> command .)
    ENDWHILE        reduce using rule 7 (commands -> command .)
    ENDIF           reduce using rule 7 (commands -> command .)
    ELSE            reduce using rule 7 (commands -> command .)
    ENDFOR          reduce using rule 7 (commands -> command .)


state 9

    (9) command -> READ . identifier SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    PIDENTIFIER     shift and go to state 13

    identifier                     shift and go to state 21

state 10

    (17) command -> identifier . ASSIGN expression SEMICOLON
    ASSIGN          shift and go to state 22


state 11

    (10) command -> WRITE . value SEMICOLON
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 23
    identifier                     shift and go to state 25

state 12

    (11) command -> FOR . PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> FOR . PIDENTIFIER FROM value TO value DO commands ENDFOR
    PIDENTIFIER     shift and go to state 26


state 13

    (32) identifier -> PIDENTIFIER . LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> PIDENTIFIER . LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> PIDENTIFIER .
    LPARENTHESIS    shift and go to state 27
    ASSIGN          reduce using rule 34 (identifier -> PIDENTIFIER .)
    SEMICOLON       reduce using rule 34 (identifier -> PIDENTIFIER .)
    NOT_EQUAL       reduce using rule 34 (identifier -> PIDENTIFIER .)
    EQUAL           reduce using rule 34 (identifier -> PIDENTIFIER .)
    LESS_OR_EQUAL   reduce using rule 34 (identifier -> PIDENTIFIER .)
    GREATER_OR_EQUAL reduce using rule 34 (identifier -> PIDENTIFIER .)
    LESS_THAN       reduce using rule 34 (identifier -> PIDENTIFIER .)
    GREATER_THAN    reduce using rule 34 (identifier -> PIDENTIFIER .)
    MODULO          reduce using rule 34 (identifier -> PIDENTIFIER .)
    DIVIDE          reduce using rule 34 (identifier -> PIDENTIFIER .)
    MULTIPLY        reduce using rule 34 (identifier -> PIDENTIFIER .)
    MINUS           reduce using rule 34 (identifier -> PIDENTIFIER .)
    PLUS            reduce using rule 34 (identifier -> PIDENTIFIER .)
    DOWNTO          reduce using rule 34 (identifier -> PIDENTIFIER .)
    TO              reduce using rule 34 (identifier -> PIDENTIFIER .)
    DO              reduce using rule 34 (identifier -> PIDENTIFIER .)
    THEN            reduce using rule 34 (identifier -> PIDENTIFIER .)
    ENDDO           reduce using rule 34 (identifier -> PIDENTIFIER .)


state 14

    (13) command -> DO . commands WHILE condition ENDDO
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 28
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 15

    (14) command -> WHILE . condition DO commands ENDWHILE
    (24) condition -> . value NOT_EQUAL value
    (25) condition -> . value EQUAL value
    (26) condition -> . value LESS_OR_EQUAL value
    (27) condition -> . value GREATER_OR_EQUAL value
    (28) condition -> . value LESS_THAN value
    (29) condition -> . value GREATER_THAN value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    condition                      shift and go to state 29
    value                          shift and go to state 30
    identifier                     shift and go to state 25

state 16

    (15) command -> IF . condition THEN commands ENDIF
    (16) command -> IF . condition THEN commands ELSE commands ENDIF
    (24) condition -> . value NOT_EQUAL value
    (25) condition -> . value EQUAL value
    (26) condition -> . value LESS_OR_EQUAL value
    (27) condition -> . value GREATER_OR_EQUAL value
    (28) condition -> . value LESS_THAN value
    (29) condition -> . value GREATER_THAN value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    condition                      shift and go to state 31
    value                          shift and go to state 30
    identifier                     shift and go to state 25

state 17

    (3) declarations -> declarations COMMA PIDENTIFIER . LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS
    (5) declarations -> declarations COMMA PIDENTIFIER .
    LPARENTHESIS    shift and go to state 32
    BEGIN           reduce using rule 5 (declarations -> declarations COMMA PIDENTIFIER .)
    COMMA           reduce using rule 5 (declarations -> declarations COMMA PIDENTIFIER .)
    PIDENTIFIER     reduce using rule 5 (declarations -> declarations COMMA PIDENTIFIER .)


state 18

    (4) declarations -> declarations PIDENTIFIER LPARENTHESIS . NUMBER COLON NUMBER RPARENTHESIS
    NUMBER          shift and go to state 33


state 19

    (1) program -> DECLARE declarations BEGIN commands END .
    $end            reduce using rule 1 (program -> DECLARE declarations BEGIN commands END .)


state 20

    (8) commands -> commands command .
    END             reduce using rule 8 (commands -> commands command .)
    READ            reduce using rule 8 (commands -> commands command .)
    WRITE           reduce using rule 8 (commands -> commands command .)
    FOR             reduce using rule 8 (commands -> commands command .)
    DO              reduce using rule 8 (commands -> commands command .)
    WHILE           reduce using rule 8 (commands -> commands command .)
    IF              reduce using rule 8 (commands -> commands command .)
    PIDENTIFIER     reduce using rule 8 (commands -> commands command .)
    ENDWHILE        reduce using rule 8 (commands -> commands command .)
    ENDIF           reduce using rule 8 (commands -> commands command .)
    ELSE            reduce using rule 8 (commands -> commands command .)
    ENDFOR          reduce using rule 8 (commands -> commands command .)


state 21

    (9) command -> READ identifier . SEMICOLON
    SEMICOLON       shift and go to state 34


state 22

    (17) command -> identifier ASSIGN . expression SEMICOLON
    (18) expression -> . value MODULO value
    (19) expression -> . value DIVIDE value
    (20) expression -> . value MULTIPLY value
    (21) expression -> . value MINUS value
    (22) expression -> . value PLUS value
    (23) expression -> . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    identifier                     shift and go to state 25
    expression                     shift and go to state 35
    value                          shift and go to state 36

state 23

    (10) command -> WRITE value . SEMICOLON
    SEMICOLON       shift and go to state 37


state 24

    (30) value -> NUMBER .
    SEMICOLON       reduce using rule 30 (value -> NUMBER .)
    NOT_EQUAL       reduce using rule 30 (value -> NUMBER .)
    EQUAL           reduce using rule 30 (value -> NUMBER .)
    LESS_OR_EQUAL   reduce using rule 30 (value -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 30 (value -> NUMBER .)
    LESS_THAN       reduce using rule 30 (value -> NUMBER .)
    GREATER_THAN    reduce using rule 30 (value -> NUMBER .)
    MODULO          reduce using rule 30 (value -> NUMBER .)
    DIVIDE          reduce using rule 30 (value -> NUMBER .)
    MULTIPLY        reduce using rule 30 (value -> NUMBER .)
    MINUS           reduce using rule 30 (value -> NUMBER .)
    PLUS            reduce using rule 30 (value -> NUMBER .)
    DOWNTO          reduce using rule 30 (value -> NUMBER .)
    TO              reduce using rule 30 (value -> NUMBER .)
    DO              reduce using rule 30 (value -> NUMBER .)
    THEN            reduce using rule 30 (value -> NUMBER .)
    ENDDO           reduce using rule 30 (value -> NUMBER .)


state 25

    (31) value -> identifier .
    SEMICOLON       reduce using rule 31 (value -> identifier .)
    NOT_EQUAL       reduce using rule 31 (value -> identifier .)
    EQUAL           reduce using rule 31 (value -> identifier .)
    LESS_OR_EQUAL   reduce using rule 31 (value -> identifier .)
    GREATER_OR_EQUAL reduce using rule 31 (value -> identifier .)
    LESS_THAN       reduce using rule 31 (value -> identifier .)
    GREATER_THAN    reduce using rule 31 (value -> identifier .)
    MODULO          reduce using rule 31 (value -> identifier .)
    DIVIDE          reduce using rule 31 (value -> identifier .)
    MULTIPLY        reduce using rule 31 (value -> identifier .)
    MINUS           reduce using rule 31 (value -> identifier .)
    PLUS            reduce using rule 31 (value -> identifier .)
    DOWNTO          reduce using rule 31 (value -> identifier .)
    TO              reduce using rule 31 (value -> identifier .)
    DO              reduce using rule 31 (value -> identifier .)
    THEN            reduce using rule 31 (value -> identifier .)
    ENDDO           reduce using rule 31 (value -> identifier .)


state 26

    (11) command -> FOR PIDENTIFIER . FROM value DOWNTO value DO commands ENDFOR
    (12) command -> FOR PIDENTIFIER . FROM value TO value DO commands ENDFOR
    FROM            shift and go to state 38


state 27

    (32) identifier -> PIDENTIFIER LPARENTHESIS . NUMBER RPARENTHESIS
    (33) identifier -> PIDENTIFIER LPARENTHESIS . PIDENTIFIER RPARENTHESIS
    NUMBER          shift and go to state 40
    PIDENTIFIER     shift and go to state 39


state 28

    (13) command -> DO commands . WHILE condition ENDDO
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    WHILE           shift and go to state 41
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 29

    (14) command -> WHILE condition . DO commands ENDWHILE
    DO              shift and go to state 42


state 30

    (24) condition -> value . NOT_EQUAL value
    (25) condition -> value . EQUAL value
    (26) condition -> value . LESS_OR_EQUAL value
    (27) condition -> value . GREATER_OR_EQUAL value
    (28) condition -> value . LESS_THAN value
    (29) condition -> value . GREATER_THAN value
    NOT_EQUAL       shift and go to state 43
    EQUAL           shift and go to state 44
    LESS_OR_EQUAL   shift and go to state 45
    GREATER_OR_EQUAL shift and go to state 46
    LESS_THAN       shift and go to state 47
    GREATER_THAN    shift and go to state 48


state 31

    (15) command -> IF condition . THEN commands ENDIF
    (16) command -> IF condition . THEN commands ELSE commands ENDIF
    THEN            shift and go to state 49


state 32

    (3) declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS . NUMBER COLON NUMBER RPARENTHESIS
    NUMBER          shift and go to state 50


state 33

    (4) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER . COLON NUMBER RPARENTHESIS
    COLON           shift and go to state 51


state 34

    (9) command -> READ identifier SEMICOLON .
    END             reduce using rule 9 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 9 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 9 (command -> READ identifier SEMICOLON .)
    FOR             reduce using rule 9 (command -> READ identifier SEMICOLON .)
    DO              reduce using rule 9 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 9 (command -> READ identifier SEMICOLON .)
    IF              reduce using rule 9 (command -> READ identifier SEMICOLON .)
    PIDENTIFIER     reduce using rule 9 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 9 (command -> READ identifier SEMICOLON .)
    ENDIF           reduce using rule 9 (command -> READ identifier SEMICOLON .)
    ELSE            reduce using rule 9 (command -> READ identifier SEMICOLON .)
    ENDFOR          reduce using rule 9 (command -> READ identifier SEMICOLON .)


state 35

    (17) command -> identifier ASSIGN expression . SEMICOLON
    SEMICOLON       shift and go to state 52


state 36

    (18) expression -> value . MODULO value
    (19) expression -> value . DIVIDE value
    (20) expression -> value . MULTIPLY value
    (21) expression -> value . MINUS value
    (22) expression -> value . PLUS value
    (23) expression -> value .
    MODULO          shift and go to state 53
    DIVIDE          shift and go to state 54
    MULTIPLY        shift and go to state 55
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    SEMICOLON       reduce using rule 23 (expression -> value .)


state 37

    (10) command -> WRITE value SEMICOLON .
    END             reduce using rule 10 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    FOR             reduce using rule 10 (command -> WRITE value SEMICOLON .)
    DO              reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WHILE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    IF              reduce using rule 10 (command -> WRITE value SEMICOLON .)
    PIDENTIFIER     reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ENDWHILE        reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ENDIF           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ELSE            reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ENDFOR          reduce using rule 10 (command -> WRITE value SEMICOLON .)


state 38

    (11) command -> FOR PIDENTIFIER FROM . value DOWNTO value DO commands ENDFOR
    (12) command -> FOR PIDENTIFIER FROM . value TO value DO commands ENDFOR
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 58
    identifier                     shift and go to state 25

state 39

    (33) identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER . RPARENTHESIS
    RPARENTHESIS    shift and go to state 59


state 40

    (32) identifier -> PIDENTIFIER LPARENTHESIS NUMBER . RPARENTHESIS
    RPARENTHESIS    shift and go to state 60


state 41

    (13) command -> DO commands WHILE . condition ENDDO
    (14) command -> WHILE . condition DO commands ENDWHILE
    (24) condition -> . value NOT_EQUAL value
    (25) condition -> . value EQUAL value
    (26) condition -> . value LESS_OR_EQUAL value
    (27) condition -> . value GREATER_OR_EQUAL value
    (28) condition -> . value LESS_THAN value
    (29) condition -> . value GREATER_THAN value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    condition                      shift and go to state 61
    value                          shift and go to state 30
    identifier                     shift and go to state 25

state 42

    (14) command -> WHILE condition DO . commands ENDWHILE
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 62
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 43

    (24) condition -> value NOT_EQUAL . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 63
    identifier                     shift and go to state 25

state 44

    (25) condition -> value EQUAL . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 64
    identifier                     shift and go to state 25

state 45

    (26) condition -> value LESS_OR_EQUAL . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 65
    identifier                     shift and go to state 25

state 46

    (27) condition -> value GREATER_OR_EQUAL . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 66
    identifier                     shift and go to state 25

state 47

    (28) condition -> value LESS_THAN . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 67
    identifier                     shift and go to state 25

state 48

    (29) condition -> value GREATER_THAN . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 68
    identifier                     shift and go to state 25

state 49

    (15) command -> IF condition THEN . commands ENDIF
    (16) command -> IF condition THEN . commands ELSE commands ENDIF
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 69
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 50

    (3) declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER . COLON NUMBER RPARENTHESIS
    COLON           shift and go to state 70


state 51

    (4) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON . NUMBER RPARENTHESIS
    NUMBER          shift and go to state 71


state 52

    (17) command -> identifier ASSIGN expression SEMICOLON .
    END             reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    DO              reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    PIDENTIFIER     reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDIF           reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDFOR          reduce using rule 17 (command -> identifier ASSIGN expression SEMICOLON .)


state 53

    (18) expression -> value MODULO . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 72
    identifier                     shift and go to state 25

state 54

    (19) expression -> value DIVIDE . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 73
    identifier                     shift and go to state 25

state 55

    (20) expression -> value MULTIPLY . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 74
    identifier                     shift and go to state 25

state 56

    (21) expression -> value MINUS . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 75
    identifier                     shift and go to state 25

state 57

    (22) expression -> value PLUS . value
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 76
    identifier                     shift and go to state 25

state 58

    (11) command -> FOR PIDENTIFIER FROM value . DOWNTO value DO commands ENDFOR
    (12) command -> FOR PIDENTIFIER FROM value . TO value DO commands ENDFOR
    DOWNTO          shift and go to state 77
    TO              shift and go to state 78


state 59

    (33) identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .
    ASSIGN          reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    SEMICOLON       reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    NOT_EQUAL       reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    EQUAL           reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    LESS_OR_EQUAL   reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    GREATER_OR_EQUAL reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    LESS_THAN       reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    GREATER_THAN    reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    MODULO          reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    DIVIDE          reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    MULTIPLY        reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    MINUS           reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    PLUS            reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    DOWNTO          reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    TO              reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    DO              reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    THEN            reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    ENDDO           reduce using rule 33 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)


state 60

    (32) identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .
    ASSIGN          reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    SEMICOLON       reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    NOT_EQUAL       reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    EQUAL           reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    LESS_OR_EQUAL   reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    GREATER_OR_EQUAL reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    LESS_THAN       reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    GREATER_THAN    reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    MODULO          reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    DIVIDE          reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    MULTIPLY        reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    MINUS           reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    PLUS            reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    DOWNTO          reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    TO              reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    DO              reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    THEN            reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    ENDDO           reduce using rule 32 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)


state 61

    (13) command -> DO commands WHILE condition . ENDDO
    (14) command -> WHILE condition . DO commands ENDWHILE
    ENDDO           shift and go to state 79
    DO              shift and go to state 42


state 62

    (14) command -> WHILE condition DO commands . ENDWHILE
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    ENDWHILE        shift and go to state 80
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 63

    (24) condition -> value NOT_EQUAL value .
    DO              reduce using rule 24 (condition -> value NOT_EQUAL value .)
    THEN            reduce using rule 24 (condition -> value NOT_EQUAL value .)
    ENDDO           reduce using rule 24 (condition -> value NOT_EQUAL value .)


state 64

    (25) condition -> value EQUAL value .
    DO              reduce using rule 25 (condition -> value EQUAL value .)
    THEN            reduce using rule 25 (condition -> value EQUAL value .)
    ENDDO           reduce using rule 25 (condition -> value EQUAL value .)


state 65

    (26) condition -> value LESS_OR_EQUAL value .
    DO              reduce using rule 26 (condition -> value LESS_OR_EQUAL value .)
    THEN            reduce using rule 26 (condition -> value LESS_OR_EQUAL value .)
    ENDDO           reduce using rule 26 (condition -> value LESS_OR_EQUAL value .)


state 66

    (27) condition -> value GREATER_OR_EQUAL value .
    DO              reduce using rule 27 (condition -> value GREATER_OR_EQUAL value .)
    THEN            reduce using rule 27 (condition -> value GREATER_OR_EQUAL value .)
    ENDDO           reduce using rule 27 (condition -> value GREATER_OR_EQUAL value .)


state 67

    (28) condition -> value LESS_THAN value .
    DO              reduce using rule 28 (condition -> value LESS_THAN value .)
    THEN            reduce using rule 28 (condition -> value LESS_THAN value .)
    ENDDO           reduce using rule 28 (condition -> value LESS_THAN value .)


state 68

    (29) condition -> value GREATER_THAN value .
    DO              reduce using rule 29 (condition -> value GREATER_THAN value .)
    THEN            reduce using rule 29 (condition -> value GREATER_THAN value .)
    ENDDO           reduce using rule 29 (condition -> value GREATER_THAN value .)


state 69

    (15) command -> IF condition THEN commands . ENDIF
    (16) command -> IF condition THEN commands . ELSE commands ENDIF
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    ENDIF           shift and go to state 81
    ELSE            shift and go to state 82
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 70

    (3) declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON . NUMBER RPARENTHESIS
    NUMBER          shift and go to state 83


state 71

    (4) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER . RPARENTHESIS
    RPARENTHESIS    shift and go to state 84


state 72

    (18) expression -> value MODULO value .
    SEMICOLON       reduce using rule 18 (expression -> value MODULO value .)


state 73

    (19) expression -> value DIVIDE value .
    SEMICOLON       reduce using rule 19 (expression -> value DIVIDE value .)


state 74

    (20) expression -> value MULTIPLY value .
    SEMICOLON       reduce using rule 20 (expression -> value MULTIPLY value .)


state 75

    (21) expression -> value MINUS value .
    SEMICOLON       reduce using rule 21 (expression -> value MINUS value .)


state 76

    (22) expression -> value PLUS value .
    SEMICOLON       reduce using rule 22 (expression -> value PLUS value .)


state 77

    (11) command -> FOR PIDENTIFIER FROM value DOWNTO . value DO commands ENDFOR
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 85
    identifier                     shift and go to state 25

state 78

    (12) command -> FOR PIDENTIFIER FROM value TO . value DO commands ENDFOR
    (30) value -> . NUMBER
    (31) value -> . identifier
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 24
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 86
    identifier                     shift and go to state 25

state 79

    (13) command -> DO commands WHILE condition ENDDO .
    END             reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    READ            reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    WRITE           reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    FOR             reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    DO              reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    WHILE           reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    IF              reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    PIDENTIFIER     reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    ENDWHILE        reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    ENDIF           reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    ELSE            reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)
    ENDFOR          reduce using rule 13 (command -> DO commands WHILE condition ENDDO .)


state 80

    (14) command -> WHILE condition DO commands ENDWHILE .
    END             reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    FOR             reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    DO              reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    IF              reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    PIDENTIFIER     reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ENDIF           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ELSE            reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ENDFOR          reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)


state 81

    (15) command -> IF condition THEN commands ENDIF .
    END             reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    READ            reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    WRITE           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    FOR             reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    DO              reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    WHILE           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    IF              reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    PIDENTIFIER     reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ENDWHILE        reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ENDIF           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ELSE            reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ENDFOR          reduce using rule 15 (command -> IF condition THEN commands ENDIF .)


state 82

    (16) command -> IF condition THEN commands ELSE . commands ENDIF
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 87
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 83

    (3) declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER . RPARENTHESIS
    RPARENTHESIS    shift and go to state 88


state 84

    (4) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .
    BEGIN           reduce using rule 4 (declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .)
    COMMA           reduce using rule 4 (declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .)
    PIDENTIFIER     reduce using rule 4 (declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .)


state 85

    (11) command -> FOR PIDENTIFIER FROM value DOWNTO value . DO commands ENDFOR
    DO              shift and go to state 89


state 86

    (12) command -> FOR PIDENTIFIER FROM value TO value . DO commands ENDFOR
    DO              shift and go to state 90


state 87

    (16) command -> IF condition THEN commands ELSE commands . ENDIF
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    ENDIF           shift and go to state 91
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 88

    (3) declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .
    BEGIN           reduce using rule 3 (declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .)
    COMMA           reduce using rule 3 (declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .)
    PIDENTIFIER     reduce using rule 3 (declarations -> declarations COMMA PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS .)


state 89

    (11) command -> FOR PIDENTIFIER FROM value DOWNTO value DO . commands ENDFOR
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 92
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 90

    (12) command -> FOR PIDENTIFIER FROM value TO value DO . commands ENDFOR
    (7) commands -> . command
    (8) commands -> . commands command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 93
    command                        shift and go to state 8
    identifier                     shift and go to state 10

state 91

    (16) command -> IF condition THEN commands ELSE commands ENDIF .
    END             reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    READ            reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WRITE           reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    FOR             reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    DO              reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WHILE           reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    IF              reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    PIDENTIFIER     reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDWHILE        reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDIF           reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ELSE            reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDFOR          reduce using rule 16 (command -> IF condition THEN commands ELSE commands ENDIF .)


state 92

    (11) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands . ENDFOR
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    ENDFOR          shift and go to state 94
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 93

    (12) command -> FOR PIDENTIFIER FROM value TO value DO commands . ENDFOR
    (8) commands -> commands . command
    (9) command -> . READ identifier SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (12) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (13) command -> . DO commands WHILE condition ENDDO
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . IF condition THEN commands ELSE commands ENDIF
    (17) command -> . identifier ASSIGN expression SEMICOLON
    (32) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (33) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (34) identifier -> . PIDENTIFIER
    ENDFOR          shift and go to state 95
    READ            shift and go to state 9
    WRITE           shift and go to state 11
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 10

state 94

    (11) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .
    END             reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    READ            reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WRITE           reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    FOR             reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    DO              reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WHILE           reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    IF              reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDIF           reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ELSE            reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 11 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)


state 95

    (12) command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .
    END             reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    READ            reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WRITE           reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    FOR             reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    DO              reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WHILE           reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    IF              reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDIF           reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ELSE            reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 12 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
